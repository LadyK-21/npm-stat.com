/*
 * This file is generated by jOOQ.
*/
package de.vorb.npmstat.persistence.jooq.routines;


import de.vorb.npmstat.persistence.jooq.Public;

import jakarta.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DropChunks2 extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -777556508;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> OLDER_THAN = createParameter("older_than", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), false, false);

    /**
     * The parameter <code>public.drop_chunks.table_name</code>.
     */
    public static final Parameter<String> TABLE_NAME = createParameter("table_name", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("NULL::name", org.jooq.impl.SQLDataType.VARCHAR)), true, false);

    /**
     * The parameter <code>public.drop_chunks.schema_name</code>.
     */
    public static final Parameter<String> SCHEMA_NAME = createParameter("schema_name", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("NULL::name", org.jooq.impl.SQLDataType.VARCHAR)), true, false);

    /**
     * The parameter <code>public.drop_chunks.cascade</code>.
     */
    public static final Parameter<Boolean> CASCADE = createParameter("cascade", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public DropChunks2() {
        super("drop_chunks", Public.PUBLIC);

        addInParameter(OLDER_THAN);
        addInParameter(TABLE_NAME);
        addInParameter(SCHEMA_NAME);
        addInParameter(CASCADE);
        setOverloaded(true);
    }

    /**
     * Set the <code>older_than</code> parameter IN value to the routine
     */
    public void setOlderThan(Object value) {
        setValue(OLDER_THAN, value);
    }

    /**
     * Set the <code>table_name</code> parameter IN value to the routine
     */
    public void setTableName(String value) {
        setValue(TABLE_NAME, value);
    }

    /**
     * Set the <code>schema_name</code> parameter IN value to the routine
     */
    public void setSchemaName(String value) {
        setValue(SCHEMA_NAME, value);
    }

    /**
     * Set the <code>cascade</code> parameter IN value to the routine
     */
    public void setCascade(Boolean value) {
        setValue(CASCADE, value);
    }
}
