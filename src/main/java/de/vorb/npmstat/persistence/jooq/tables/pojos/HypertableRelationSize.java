/*
 * This file is generated by jOOQ.
*/
package de.vorb.npmstat.persistence.jooq.tables.pojos;


import java.io.Serializable;

import jakarta.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HypertableRelationSize implements Serializable {

    private static final long serialVersionUID = 1483523894;

    private Long tableBytes;
    private Long indexBytes;
    private Long toastBytes;
    private Long totalBytes;

    public HypertableRelationSize() {}

    public HypertableRelationSize(HypertableRelationSize value) {
        this.tableBytes = value.tableBytes;
        this.indexBytes = value.indexBytes;
        this.toastBytes = value.toastBytes;
        this.totalBytes = value.totalBytes;
    }

    public HypertableRelationSize(
        Long tableBytes,
        Long indexBytes,
        Long toastBytes,
        Long totalBytes
    ) {
        this.tableBytes = tableBytes;
        this.indexBytes = indexBytes;
        this.toastBytes = toastBytes;
        this.totalBytes = totalBytes;
    }

    public Long getTableBytes() {
        return this.tableBytes;
    }

    public HypertableRelationSize setTableBytes(Long tableBytes) {
        this.tableBytes = tableBytes;
        return this;
    }

    public Long getIndexBytes() {
        return this.indexBytes;
    }

    public HypertableRelationSize setIndexBytes(Long indexBytes) {
        this.indexBytes = indexBytes;
        return this;
    }

    public Long getToastBytes() {
        return this.toastBytes;
    }

    public HypertableRelationSize setToastBytes(Long toastBytes) {
        this.toastBytes = toastBytes;
        return this;
    }

    public Long getTotalBytes() {
        return this.totalBytes;
    }

    public HypertableRelationSize setTotalBytes(Long totalBytes) {
        this.totalBytes = totalBytes;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final HypertableRelationSize other = (HypertableRelationSize) obj;
        if (tableBytes == null) {
            if (other.tableBytes != null)
                return false;
        }
        else if (!tableBytes.equals(other.tableBytes))
            return false;
        if (indexBytes == null) {
            if (other.indexBytes != null)
                return false;
        }
        else if (!indexBytes.equals(other.indexBytes))
            return false;
        if (toastBytes == null) {
            if (other.toastBytes != null)
                return false;
        }
        else if (!toastBytes.equals(other.toastBytes))
            return false;
        if (totalBytes == null) {
            if (other.totalBytes != null)
                return false;
        }
        else if (!totalBytes.equals(other.totalBytes))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tableBytes == null) ? 0 : this.tableBytes.hashCode());
        result = prime * result + ((this.indexBytes == null) ? 0 : this.indexBytes.hashCode());
        result = prime * result + ((this.toastBytes == null) ? 0 : this.toastBytes.hashCode());
        result = prime * result + ((this.totalBytes == null) ? 0 : this.totalBytes.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("HypertableRelationSize (");

        sb.append(tableBytes);
        sb.append(", ").append(indexBytes);
        sb.append(", ").append(toastBytes);
        sb.append(", ").append(totalBytes);

        sb.append(")");
        return sb.toString();
    }
}
