/*
 * This file is generated by jOOQ.
*/
package de.vorb.npmstat.persistence.jooq;


import de.vorb.npmstat.persistence.jooq.routines.AddDimension;
import de.vorb.npmstat.persistence.jooq.routines.AttachTablespace;
import de.vorb.npmstat.persistence.jooq.routines.CreateHypertable;
import de.vorb.npmstat.persistence.jooq.routines.DetachTablespace;
import de.vorb.npmstat.persistence.jooq.routines.DetachTablespaces;
import de.vorb.npmstat.persistence.jooq.routines.DropChunks1;
import de.vorb.npmstat.persistence.jooq.routines.DropChunks2;
import de.vorb.npmstat.persistence.jooq.routines.First;
import de.vorb.npmstat.persistence.jooq.routines.Histogram;
import de.vorb.npmstat.persistence.jooq.routines.Last;
import de.vorb.npmstat.persistence.jooq.routines.SetChunkTimeInterval;
import de.vorb.npmstat.persistence.jooq.routines.SetNumberPartitions;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket1;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket10;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket11;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket12;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket2;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket3;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket4;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket5;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket6;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket7;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket8;
import de.vorb.npmstat.persistence.jooq.routines.TimeBucket9;
import de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSize;
import de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSizePretty;
import de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSize;
import de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSizePretty;
import de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSize;
import de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSizePretty;
import de.vorb.npmstat.persistence.jooq.tables.ShowTablespaces;
import de.vorb.npmstat.persistence.jooq.tables.records.ChunkRelationSizePrettyRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.ChunkRelationSizeRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.HypertableRelationSizePrettyRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.HypertableRelationSizeRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.IndexesRelationSizePrettyRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.IndexesRelationSizeRecord;
import de.vorb.npmstat.persistence.jooq.tables.records.ShowTablespacesRecord;

import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import jakarta.annotation.Generated;

import org.jooq.AggregateFunction;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.impl.DSL;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void addDimension(Configuration configuration, Object mainTable, String columnName, Integer numberPartitions, Object chunkTimeInterval, String partitioningFunc, Boolean ifNotExists) {
        AddDimension p = new AddDimension();
        p.setMainTable(mainTable);
        p.setColumnName(columnName);
        p.setNumberPartitions(numberPartitions);
        p.setChunkTimeInterval(chunkTimeInterval);
        p.setPartitioningFunc(partitioningFunc);
        p.setIfNotExists(ifNotExists);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void attachTablespace(Configuration configuration, String tablespace, Object hypertable, Boolean ifNotAttached) {
        AttachTablespace p = new AttachTablespace();
        p.setTablespace(tablespace);
        p.setHypertable(hypertable);
        p.setIfNotAttached(ifNotAttached);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void createHypertable(Configuration configuration, Object mainTable, String timeColumnName, String partitioningColumn, Integer numberPartitions, String associatedSchemaName, String associatedTablePrefix, Object chunkTimeInterval, Boolean createDefaultIndexes, Boolean ifNotExists, String partitioningFunc, Boolean migrateData) {
        CreateHypertable p = new CreateHypertable();
        p.setMainTable(mainTable);
        p.setTimeColumnName(timeColumnName);
        p.setPartitioningColumn(partitioningColumn);
        p.setNumberPartitions(numberPartitions);
        p.setAssociatedSchemaName(associatedSchemaName);
        p.setAssociatedTablePrefix(associatedTablePrefix);
        p.setChunkTimeInterval(chunkTimeInterval);
        p.setCreateDefaultIndexes(createDefaultIndexes);
        p.setIfNotExists(ifNotExists);
        p.setPartitioningFunc(partitioningFunc);
        p.setMigrateData(migrateData);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer detachTablespace(Configuration configuration, String tablespace, Object hypertable, Boolean ifAttached) {
        DetachTablespace f = new DetachTablespace();
        f.setTablespace(tablespace);
        f.setHypertable(hypertable);
        f.setIfAttached(ifAttached);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> detachTablespace(String tablespace, Object hypertable, Boolean ifAttached) {
        DetachTablespace f = new DetachTablespace();
        f.setTablespace(tablespace);
        f.setHypertable(hypertable);
        f.setIfAttached(ifAttached);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> detachTablespace(Field<String> tablespace, Field<Object> hypertable, Field<Boolean> ifAttached) {
        DetachTablespace f = new DetachTablespace();
        f.setTablespace(tablespace);
        f.setHypertable(hypertable);
        f.setIfAttached(ifAttached);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Integer detachTablespaces(Configuration configuration, Object hypertable) {
        DetachTablespaces f = new DetachTablespaces();
        f.setHypertable(hypertable);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> detachTablespaces(Object hypertable) {
        DetachTablespaces f = new DetachTablespaces();
        f.setHypertable(hypertable);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Integer> detachTablespaces(Field<Object> hypertable) {
        DetachTablespaces f = new DetachTablespaces();
        f.setHypertable(hypertable);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void dropChunks1(Configuration configuration, Object olderThan, String tableName, String schemaName, Boolean cascade) {
        DropChunks1 p = new DropChunks1();
        p.setOlderThan(olderThan);
        p.setTableName(tableName);
        p.setSchemaName(schemaName);
        p.setCascade(cascade);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void dropChunks2(Configuration configuration, Object olderThan, String tableName, String schemaName, Boolean cascade) {
        DropChunks2 p = new DropChunks2();
        p.setOlderThan(olderThan);
        p.setTableName(tableName);
        p.setSchemaName(schemaName);
        p.setCascade(cascade);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> first(Object __1, Object __2) {
        First f = new First();
        f.set__1(__1);
        f.set__2(__2);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> first(Field<Object> __1, Field<Object> __2) {
        First f = new First();
        f.set__1(__1);
        f.set__2(__2);

        return f.asAggregateFunction();
    }

    /**
     * Get <code>public.histogram</code> as a field.
     */
    public static AggregateFunction<Integer[]> histogram(Double __1, Double __2, Double __3, Integer __4) {
        Histogram f = new Histogram();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asAggregateFunction();
    }

    /**
     * Get <code>public.histogram</code> as a field.
     */
    public static AggregateFunction<Integer[]> histogram(Field<Double> __1, Field<Double> __2, Field<Double> __3, Field<Integer> __4) {
        Histogram f = new Histogram();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> last(Object __1, Object __2) {
        Last f = new Last();
        f.set__1(__1);
        f.set__2(__2);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AggregateFunction<Object> last(Field<Object> __1, Field<Object> __2) {
        Last f = new Last();
        f.set__1(__1);
        f.set__2(__2);

        return f.asAggregateFunction();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void setChunkTimeInterval(Configuration configuration, Object mainTable, Object chunkTimeInterval, String dimensionName) {
        SetChunkTimeInterval p = new SetChunkTimeInterval();
        p.setMainTable(mainTable);
        p.setChunkTimeInterval(chunkTimeInterval);
        p.setDimensionName(dimensionName);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static void setNumberPartitions(Configuration configuration, Object mainTable, Integer numberPartitions, String dimensionName) {
        SetNumberPartitions p = new SetNumberPartitions();
        p.setMainTable(mainTable);
        p.setNumberPartitions(numberPartitions);
        p.setDimensionName(dimensionName);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Timestamp timeBucket1(Configuration configuration, Object bucketWidth, Timestamp ts) {
        TimeBucket1 f = new TimeBucket1();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Timestamp> timeBucket1(Object bucketWidth, Timestamp ts) {
        TimeBucket1 f = new TimeBucket1();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Timestamp> timeBucket1(Field<Object> bucketWidth, Field<Timestamp> ts) {
        TimeBucket1 f = new TimeBucket1();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static OffsetDateTime timeBucket2(Configuration configuration, Object bucketWidth, OffsetDateTime ts) {
        TimeBucket2 f = new TimeBucket2();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<OffsetDateTime> timeBucket2(Object bucketWidth, OffsetDateTime ts) {
        TimeBucket2 f = new TimeBucket2();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<OffsetDateTime> timeBucket2(Field<Object> bucketWidth, Field<OffsetDateTime> ts) {
        TimeBucket2 f = new TimeBucket2();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static LocalDate timeBucket3(Configuration configuration, Object bucketWidth, LocalDate ts) {
        TimeBucket3 f = new TimeBucket3();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<LocalDate> timeBucket3(Object bucketWidth, LocalDate ts) {
        TimeBucket3 f = new TimeBucket3();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<LocalDate> timeBucket3(Field<Object> bucketWidth, Field<LocalDate> ts) {
        TimeBucket3 f = new TimeBucket3();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Timestamp timeBucket4(Configuration configuration, Object bucketWidth, Timestamp ts, Object offset) {
        TimeBucket4 f = new TimeBucket4();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Timestamp> timeBucket4(Object bucketWidth, Timestamp ts, Object offset) {
        TimeBucket4 f = new TimeBucket4();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Timestamp> timeBucket4(Field<Object> bucketWidth, Field<Timestamp> ts, Field<Object> offset) {
        TimeBucket4 f = new TimeBucket4();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static OffsetDateTime timeBucket5(Configuration configuration, Object bucketWidth, OffsetDateTime ts, Object offset) {
        TimeBucket5 f = new TimeBucket5();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<OffsetDateTime> timeBucket5(Object bucketWidth, OffsetDateTime ts, Object offset) {
        TimeBucket5 f = new TimeBucket5();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<OffsetDateTime> timeBucket5(Field<Object> bucketWidth, Field<OffsetDateTime> ts, Field<Object> offset) {
        TimeBucket5 f = new TimeBucket5();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static LocalDate timeBucket6(Configuration configuration, Object bucketWidth, LocalDate ts, Object offset) {
        TimeBucket6 f = new TimeBucket6();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<LocalDate> timeBucket6(Object bucketWidth, LocalDate ts, Object offset) {
        TimeBucket6 f = new TimeBucket6();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<LocalDate> timeBucket6(Field<Object> bucketWidth, Field<LocalDate> ts, Field<Object> offset) {
        TimeBucket6 f = new TimeBucket6();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Long timeBucket7(Configuration configuration, Long bucketWidth, Long ts) {
        TimeBucket7 f = new TimeBucket7();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Long> timeBucket7(Long bucketWidth, Long ts) {
        TimeBucket7 f = new TimeBucket7();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Long> timeBucket7(Field<Long> bucketWidth, Field<Long> ts) {
        TimeBucket7 f = new TimeBucket7();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Integer timeBucket8(Configuration configuration, Integer bucketWidth, Integer ts) {
        TimeBucket8 f = new TimeBucket8();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Integer> timeBucket8(Integer bucketWidth, Integer ts) {
        TimeBucket8 f = new TimeBucket8();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Integer> timeBucket8(Field<Integer> bucketWidth, Field<Integer> ts) {
        TimeBucket8 f = new TimeBucket8();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Short timeBucket9(Configuration configuration, Short bucketWidth, Short ts) {
        TimeBucket9 f = new TimeBucket9();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Short> timeBucket9(Short bucketWidth, Short ts) {
        TimeBucket9 f = new TimeBucket9();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Short> timeBucket9(Field<Short> bucketWidth, Field<Short> ts) {
        TimeBucket9 f = new TimeBucket9();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Long timeBucket10(Configuration configuration, Long bucketWidth, Long ts, Long offset) {
        TimeBucket10 f = new TimeBucket10();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Long> timeBucket10(Long bucketWidth, Long ts, Long offset) {
        TimeBucket10 f = new TimeBucket10();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Long> timeBucket10(Field<Long> bucketWidth, Field<Long> ts, Field<Long> offset) {
        TimeBucket10 f = new TimeBucket10();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Integer timeBucket11(Configuration configuration, Integer bucketWidth, Integer ts, Integer offset) {
        TimeBucket11 f = new TimeBucket11();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Integer> timeBucket11(Integer bucketWidth, Integer ts, Integer offset) {
        TimeBucket11 f = new TimeBucket11();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Integer> timeBucket11(Field<Integer> bucketWidth, Field<Integer> ts, Field<Integer> offset) {
        TimeBucket11 f = new TimeBucket11();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Call <code>public.time_bucket</code>
     */
    public static Short timeBucket12(Configuration configuration, Short bucketWidth, Short ts, Short offset) {
        TimeBucket12 f = new TimeBucket12();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Short> timeBucket12(Short bucketWidth, Short ts, Short offset) {
        TimeBucket12 f = new TimeBucket12();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * Get <code>public.time_bucket</code> as a field.
     */
    public static Field<Short> timeBucket12(Field<Short> bucketWidth, Field<Short> ts, Field<Short> offset) {
        TimeBucket12 f = new TimeBucket12();
        f.setBucketWidth(bucketWidth);
        f.setTs(ts);
        f.setOffset(offset);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<ChunkRelationSizeRecord> chunkRelationSize(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSize.CHUNK_RELATION_SIZE.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ChunkRelationSize chunkRelationSize(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSize.CHUNK_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ChunkRelationSize chunkRelationSize(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSize.CHUNK_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<ChunkRelationSizePrettyRecord> chunkRelationSizePretty(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSizePretty.CHUNK_RELATION_SIZE_PRETTY.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ChunkRelationSizePretty chunkRelationSizePretty(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSizePretty.CHUNK_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ChunkRelationSizePretty chunkRelationSizePretty(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.ChunkRelationSizePretty.CHUNK_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<HypertableRelationSizeRecord> hypertableRelationSize(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSize hypertableRelationSize(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSize hypertableRelationSize(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<HypertableRelationSizePrettyRecord> hypertableRelationSizePretty(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSizePretty hypertableRelationSizePretty(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSizePretty hypertableRelationSizePretty(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<IndexesRelationSizeRecord> indexesRelationSize(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSize indexesRelationSize(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSize indexesRelationSize(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<IndexesRelationSizePrettyRecord> indexesRelationSizePretty(Configuration configuration, Object mainTable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSizePretty indexesRelationSizePretty(Object mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSizePretty indexesRelationSizePretty(Field<Object> mainTable) {
        return de.vorb.npmstat.persistence.jooq.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<ShowTablespacesRecord> showTablespaces(Configuration configuration, Object hypertable) {
        return DSL.using(configuration).selectFrom(de.vorb.npmstat.persistence.jooq.tables.ShowTablespaces.SHOW_TABLESPACES.call(hypertable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ShowTablespaces showTablespaces(Object hypertable) {
        return de.vorb.npmstat.persistence.jooq.tables.ShowTablespaces.SHOW_TABLESPACES.call(hypertable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static ShowTablespaces showTablespaces(Field<Object> hypertable) {
        return de.vorb.npmstat.persistence.jooq.tables.ShowTablespaces.SHOW_TABLESPACES.call(hypertable);
    }
}
