/*
 * This file is generated by jOOQ.
*/
package de.vorb.npmstat.persistence.jooq.tables.records;


import de.vorb.npmstat.persistence.jooq.tables.HypertableRelationSizePretty;

import jakarta.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HypertableRelationSizePrettyRecord extends TableRecordImpl<HypertableRelationSizePrettyRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1221517443;

    /**
     * Setter for <code>public.hypertable_relation_size_pretty.table_size</code>.
     */
    public HypertableRelationSizePrettyRecord setTableSize(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.hypertable_relation_size_pretty.table_size</code>.
     */
    public String getTableSize() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.hypertable_relation_size_pretty.index_size</code>.
     */
    public HypertableRelationSizePrettyRecord setIndexSize(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.hypertable_relation_size_pretty.index_size</code>.
     */
    public String getIndexSize() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.hypertable_relation_size_pretty.toast_size</code>.
     */
    public HypertableRelationSizePrettyRecord setToastSize(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.hypertable_relation_size_pretty.toast_size</code>.
     */
    public String getToastSize() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.hypertable_relation_size_pretty.total_size</code>.
     */
    public HypertableRelationSizePrettyRecord setTotalSize(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.hypertable_relation_size_pretty.total_size</code>.
     */
    public String getTotalSize() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.TABLE_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.INDEX_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.TOAST_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.TOTAL_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getTableSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIndexSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getToastSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTotalSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTableSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIndexSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getToastSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTotalSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypertableRelationSizePrettyRecord value1(String value) {
        setTableSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypertableRelationSizePrettyRecord value2(String value) {
        setIndexSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypertableRelationSizePrettyRecord value3(String value) {
        setToastSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypertableRelationSizePrettyRecord value4(String value) {
        setTotalSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypertableRelationSizePrettyRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HypertableRelationSizePrettyRecord
     */
    public HypertableRelationSizePrettyRecord() {
        super(HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY);
    }

    /**
     * Create a detached, initialised HypertableRelationSizePrettyRecord
     */
    public HypertableRelationSizePrettyRecord(String tableSize, String indexSize, String toastSize, String totalSize) {
        super(HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY);

        set(0, tableSize);
        set(1, indexSize);
        set(2, toastSize);
        set(3, totalSize);
    }
}
